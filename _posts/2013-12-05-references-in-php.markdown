---
layout: post
title:  "PHP的变量引用"
date:   2013-12-05 22:16:17
categories: PHP Internals
---

这篇文编译于[Derick Rethans][rethans]的[References in PHP, An In-Depth Look][php-ref]。因自学PHP实现原理无意找到的好文，爱不释手，转来分享给同学们。

[rethans]: http://derickrethans.nl/
[php-ref]: http://derickrethans.nl/files/phparch-php-variables-article.pdf

PHP对变量处理方法有些时候并不那么容易理解。不知你有没有想过当一个变量被赋予另一个变量时，底层引擎做了哪些事情？还有当一个函数以“引用”的方式返回一个变量呢？如果有兴趣，请看下文。

所有计算机语言都需要通过某种形式来存放数据——即所谓的变量。在一些语言里，变量有特定的类型，它们可能是一个字符串，一个数字，一个数组，一个对象或者其他类型的数据。C和Pascal就是这种静态类型语言中的典型。PHP的变量则没有这种限制。它们在前一行代码中可能是一个字符串，到下一行又可能变成一个数字，类型之间转换非常方便，很多时候还是自动的。这种松散类型变量的特性也正是PHP如此易学，强大的原因之一。虽然有些时候，这个特性可能引起一些奇怪的问题。

在PHP内部，所有变量被存放在一个叫zval的容器中（有时也叫变量容器）。这个容器负责记录一个变量的各种属性。最主要的当然是记录变量的值，再是这个变量的类型。Python在这个方面和PHP相似，也对每个变量做类型标记。变量容器还包含了几个附加的字段，PHP引擎用来识别变量是否是一个引用，还有变量被引用的次数。

所有变量都被放在符号表中。这个表和关联数组非常相似，数组中的每个值都有一个索引，而每个值都指向存放变量值和类型的容器。如图1所示。

##引用计数 Reference Counting

PHP试着在做像 $a = $b 这样的变量复制时更智能一点。使用“=”操作符有时也叫做“赋值”操作。赋值时，PHP引擎并不会真的复制变量容器，它只是简单对容器的refcount字段加1。可以想像，当复制的内容是一大段字符串或者一个大数组时，这样做可以节省不少内存。图2即是这个过程的演示。